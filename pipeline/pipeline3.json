{
	"name": "pipeline3",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Test1",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Parquet1",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Copy data2",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Test1",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Parquet1",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "log",
					"value": {
						"value": "@concat('{\"startTime\":\"',utcNow(),'\",\"endTime\":\"',utcNow(),'\",\"processId\":\"', activity('Copy data1').ActivityRunId,'\",\"processName\":\"Copy Data\",\"status\":\"',activity('Copy data1').Status,'\",\"errorMessage\":\"',activity('Copy data1').Error?.message,'\"}')\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Set variable2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_LogPipelineExecution]",
					"storedProcedureParameters": {
						"End_Time": {
							"value": {
								"value": "@json(variables('log')).endTime",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"Message": {
							"value": {
								"value": "@json(variables('log')).errorMessage",
								"type": "Expression"
							},
							"type": "String"
						},
						"Process_Id": {
							"value": {
								"value": "@json(variables('log')).processId",
								"type": "Expression"
							},
							"type": "String"
						},
						"Process_Name": {
							"value": {
								"value": "@json(variables('log')).processName",
								"type": "Expression"
							},
							"type": "String"
						},
						"Start_Time": {
							"value": {
								"value": "@json(variables('log')).startTime",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"Status": {
							"value": {
								"value": "@json(variables('log')).status",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "sqlconnector",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Set variable2",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Copy data2",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "log",
					"value": {
						"value": "@concat('{\"startTime\":\"',utcNow(),'\",\"endTime\":\"',utcNow(),'\",\"processId\":\"', activity('Copy data2').ActivityRunId,'\",\"processName\":\"Copy Data\",\"status\":\"',activity('Copy data2').Status,'\",\"errorMessage\":\"',activity('Copy data2').Error?.message,'\"}')\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Stored procedure1_copy1",
				"type": "SqlServerStoredProcedure",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_LogPipelineExecution]",
					"storedProcedureParameters": {
						"End_Time": {
							"value": {
								"value": "@json(variables('log')).endTime",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"Message": {
							"value": {
								"value": "@json(variables('log')).errorMessage",
								"type": "Expression"
							},
							"type": "String"
						},
						"Process_Id": {
							"value": {
								"value": "@json(variables('log')).processId",
								"type": "Expression"
							},
							"type": "String"
						},
						"Process_Name": {
							"value": {
								"value": "@json(variables('log')).processName",
								"type": "Expression"
							},
							"type": "String"
						},
						"Start_Time": {
							"value": {
								"value": "@json(variables('log')).startTime",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"Status": {
							"value": {
								"value": "@json(variables('log')).status",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "sqlconnector",
					"type": "LinkedServiceReference"
				}
			}
		],
		"variables": {
			"activityNames": {
				"type": "Array"
			},
			"log": {
				"type": "String"
			},
			"test": {
				"type": "Array"
			}
		},
		"annotations": []
	}
}